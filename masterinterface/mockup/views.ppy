# Create your views here.

import inspect
import sys

from django.shortcuts import render_to_response
from django.views.generic.base import View
from django.template import RequestContext
from masterinterface.scs.services import invokeSoapService
from masterinterface.scs.permissions import guard, check_sample_permission, login_required
from models import *
#-split-#
# import {MethodName} form
from forms import {MethodName}Form
#-split-#

def index(request):
    """ default view with list of available service methods
    """
    methods = []
    for name, obj in inspect.getmembers(sys.modules[__name__]):
        if inspect.isclass(obj):
            if str(obj.__bases__).count('View'):
                methods.append(name)

    return render_to_response('{ServiceName}/index.html',
            {{'methods':methods}},
        context_instance=RequestContext(request)
    )

#-split-#

class {MethodName}(View):
    """ {MethodName} View Class
    """

    template_name = '{ServiceName}/{MethodName}.html'
    action_url = '/{ServiceName}/{MethodName}/'
    wsdl_url = '{WsdlURL}'
    method = '{MethodName}'
    service = '{ServiceName}'
    port = '{PortName}'
    requestType = {RequestType}
    responseType = {ResponseType}

    # your permission control goes here
    @guard(check_sample_permission)
    def get(self, request):
        """ get the form page to send the request """

        form = {MethodName}Form()

        return render_to_response(
            self.template_name,
                {{ 'title':'{MethodName} form',
                  'form' : form,
                  'action': self.action_url,
                  'result': None}},
            context_instance=RequestContext(request)
        )

    # your permission control goes here
    @guard(check_sample_permission)
    def post(self, request):
        """ validate form and post request to the service """

        # check form validation
        form = {MethodName}Form( request.POST, request.FILES)

        if form.is_valid():

            # invoke service
            result = invokeSoapService(
                self.wsdl_url,
                self.service,
                self.port,
                self.method,
                form.cleaned_data,
                self.requestType,
                self.responseType
            )

            return render_to_response(
                self.template_name,
                    {{ 'title':'{MethodName} form',
                      'form' : {MethodName}Form(),
                      'action': self.action_url,
                      'statusmessage': 'Action Performed',
                      'result': result }},
                context_instance=RequestContext(request)
            )


        # form validation failed
        errormessage = 'Error while validating form'

        return render_to_response(
            self.template_name,
                {{ 'title':'{MethodName} form',
                  'form' : {MethodName}Form(),
                  'action': self.action_url,
                  'errormessage': errormessage,
                  'result': None}},
            context_instance=RequestContext(request)
        )
